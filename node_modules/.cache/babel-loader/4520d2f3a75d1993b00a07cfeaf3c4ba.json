{"ast":null,"code":"import _classCallCheck from \"/home/moistcode/Github/front-end-code-challenge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moistcode/Github/front-end-code-challenge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moistcode/Github/front-end-code-challenge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moistcode/Github/front-end-code-challenge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moistcode/Github/front-end-code-challenge/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/moistcode/Github/front-end-code-challenge/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/moistcode/Github/front-end-code-challenge/src/components/profile.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./profile.css\"; // Components\n\nimport LabelInputItem from \"./labelInputItem\";\nimport LabelOptionItem from \"./labelOptionItem\";\nimport FormMessage from \"./formMessage\";\nvar options = [{\n  value: \"unspecified\",\n  text: \"Unspecified\"\n}, {\n  value: \"male\",\n  text: \"Male\"\n}, {\n  value: \"female\",\n  text: \"Female\"\n}];\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this));\n    _this.handleFormSubmit = _this.handleFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formMessageRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"removeInvalidClasses\",\n    value: function removeInvalidClasses(requiredFields) {\n      requiredFields.forEach(function (element) {\n        element.classList.remove(\"profile-form__field--invalid\");\n      });\n      this.formMessageRef.current.innerHTML = \"\";\n      this.formMessageRef.current.classList.remove(\"profile-form__message--invalid\");\n    }\n  }, {\n    key: \"addInvalidClassesAndValidationMessage\",\n    value: function addInvalidClassesAndValidationMessage(emptyFields) {\n      var emptyFieldNames = emptyFields.map(function (element) {\n        return element.name;\n      });\n      this.formMessageRef.current.classList.add(\"profile-form__message--invalid\");\n      this.formMessageRef.current.innerHTML = capitalizeFirstLetter(\"\".concat(emptyFieldNames.join(\", \"), \" can not be blank\"));\n    }\n  }, {\n    key: \"showFormSuccess\",\n    value: function showFormSuccess() {\n      this.formMessageRef.current.innerHTML = \"Form submitted!\";\n    }\n  }, {\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit(event) {\n      event.preventDefault();\n      var requiredFields = [event.target.name, event.target.gender, event.target.email, event.target.phone];\n      var emptyFields = requiredFields.filter(function (element) {\n        return !Boolean(element.value);\n      });\n      this.removeInvalidClasses(requiredFields);\n\n      if (emptyFields.length) {\n        this.addInvalidClassesAndValidationMessage(emptyFields);\n        emptyFields.forEach(function (element) {\n          element.classList.add(\"profile-form__field--invalid\");\n        });\n      } else {\n        this.showFormSuccess();\n        console.log({\n          name: event.target.name.value,\n          gender: event.target.gender.value,\n          email: event.target.email.value,\n          phone: event.target.phone.value\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.props.name), React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(LabelInputItem, {\n        labelText: \"Name:\",\n        inputValue: this.props.profile.name,\n        inputName: \"name\",\n        onChange: function onChange() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(LabelOptionItem, {\n        labelText: \"Gender:\",\n        selectName: \"gender\",\n        selectValue: this.props.profile.gender,\n        options: options,\n        onChange: function onChange() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(LabelInputItem, {\n        labelText: \"Email:\",\n        inputValue: this.props.profile.email,\n        inputName: \"email\",\n        onChange: function onChange() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(LabelInputItem, {\n        labelText: \"Phone:\",\n        inputValue: this.props.profile.phone,\n        inputName: \"phone\",\n        onChange: function onChange() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"profile-form__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"profile-form__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        ref: this.formMessageRef,\n        className: \"profile-form__message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nProfile.defaultProps = {\n  profile: {\n    name: \"\",\n    gender: \"\",\n    email: \"\",\n    phone: \"\"\n  }\n};\nProfile.propTypes = {\n  profile: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired\n  }),\n  name: PropTypes.string.isRequired\n};\nexport default Profile;","map":{"version":3,"sources":["/home/moistcode/Github/front-end-code-challenge/src/components/profile.js"],"names":["React","Component","PropTypes","LabelInputItem","LabelOptionItem","FormMessage","options","value","text","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Profile","handleFormSubmit","bind","formMessageRef","createRef","requiredFields","forEach","element","classList","remove","current","innerHTML","emptyFields","emptyFieldNames","map","name","add","join","event","preventDefault","target","gender","email","phone","filter","Boolean","removeInvalidClasses","length","addInvalidClassesAndValidationMessage","showFormSuccess","console","log","props","profile","defaultProps","propTypes","shape","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./profile.css\";\n\n// Components\nimport LabelInputItem from \"./labelInputItem\";\nimport LabelOptionItem from \"./labelOptionItem\";\nimport FormMessage from \"./formMessage\";\n\nconst options = [\n  {\n    value: \"unspecified\",\n    text: \"Unspecified\"\n  },\n  {\n    value: \"male\",\n    text: \"Male\"\n  },\n  {\n    value: \"female\",\n    text: \"Female\"\n  }\n];\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nclass Profile extends Component {\n  constructor() {\n    super();\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.formMessageRef = React.createRef();\n  }\n\n  removeInvalidClasses(requiredFields) {\n    requiredFields.forEach(element => {\n      element.classList.remove(\"profile-form__field--invalid\");\n    });\n\n    this.formMessageRef.current.innerHTML = \"\";\n    this.formMessageRef.current.classList.remove(\n      \"profile-form__message--invalid\"\n    );\n  }\n\n  addInvalidClassesAndValidationMessage(emptyFields) {\n    const emptyFieldNames = emptyFields.map(element => element.name);\n\n    this.formMessageRef.current.classList.add(\"profile-form__message--invalid\");\n    this.formMessageRef.current.innerHTML = capitalizeFirstLetter(\n      `${emptyFieldNames.join(\", \")} can not be blank`\n    );\n  }\n\n  showFormSuccess() {\n    this.formMessageRef.current.innerHTML = \"Form submitted!\";\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n\n    const requiredFields = [\n      event.target.name,\n      event.target.gender,\n      event.target.email,\n      event.target.phone\n    ];\n\n    const emptyFields = requiredFields.filter(\n      element => !Boolean(element.value)\n    );\n\n    this.removeInvalidClasses(requiredFields);\n\n    if (emptyFields.length) {\n      this.addInvalidClassesAndValidationMessage(emptyFields);\n\n      emptyFields.forEach(element => {\n        element.classList.add(\"profile-form__field--invalid\");\n      });\n    } else {\n      this.showFormSuccess();\n\n      console.log({\n        name: event.target.name.value,\n        gender: event.target.gender.value,\n        email: event.target.email.value,\n        phone: event.target.phone.value\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>{this.props.name}</h1>\n        <form onSubmit={this.handleFormSubmit}>\n          <LabelInputItem\n            labelText=\"Name:\"\n            inputValue={this.props.profile.name}\n            inputName=\"name\"\n            onChange={() => {}}\n          />\n\n          <LabelOptionItem\n            labelText=\"Gender:\"\n            selectName=\"gender\"\n            selectValue={this.props.profile.gender}\n            options={options}\n            onChange={() => {}}\n          />\n\n          <LabelInputItem\n            labelText=\"Email:\"\n            inputValue={this.props.profile.email}\n            inputName=\"email\"\n            onChange={() => {}}\n          />\n\n          <LabelInputItem\n            labelText=\"Phone:\"\n            inputValue={this.props.profile.phone}\n            inputName=\"phone\"\n            onChange={() => {}}\n          />\n\n          <div className=\"profile-form__row\">\n            <input type=\"submit\" value=\"Save\" />\n          </div>\n\n          <div className=\"profile-form__row\">\n            <span ref={this.formMessageRef} className=\"profile-form__message\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nProfile.defaultProps = {\n  profile: {\n    name: \"\",\n    gender: \"\",\n    email: \"\",\n    phone: \"\"\n  }\n};\n\nProfile.propTypes = {\n  profile: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired\n  }),\n  name: PropTypes.string.isRequired\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}