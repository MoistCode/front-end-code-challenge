{"ast":null,"code":"var _jsxFileName = \"/home/moistcode/Github/front-end-code-challenge/src/components/labelOptionItem.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport noop from \"../utils/noop\";\n\nvar LabelOptionItem = function LabelOptionItem(props) {\n  var labelText = props.labelText,\n      selectValue = props.selectValue,\n      selectName = props.selectName,\n      options = props.options,\n      onChange = props.onChange,\n      isValid = props.isValid;\n  var validityClassName = \"profile-form__field profile-form__select\".concat(isValid ? \"\" : \" profile-form__field--invalid\");\n  return React.createElement(\"label\", {\n    className: \"profile-form__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, labelText, React.createElement(\"select\", {\n    defaultValue: selectValue,\n    className: validityClassName,\n    name: selectName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, generateOptions(options)));\n};\n\nfunction generateOptions(options) {\n  return options.map(function (option) {\n    return React.createElement(\"option\", {\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, option.text);\n  });\n}\n\nLabelOptionItem.defaultProps = {\n  labelText: \"\",\n  selectValue: \"\",\n  selectName: \"\",\n  options: [],\n  onChange: noop,\n  isValid: true\n};\nLabelOptionItem.propTypes = {\n  labelText: PropTypes.string,\n  selectValue: PropTypes.string,\n  selectName: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    text: PropTypes.string\n  })),\n  onChange: PropTypes.func,\n  isValid: PropTypes.bool\n};\nexport default LabelOptionItem;","map":{"version":3,"sources":["/home/moistcode/Github/front-end-code-challenge/src/components/labelOptionItem.js"],"names":["React","PropTypes","noop","LabelOptionItem","props","labelText","selectValue","selectName","options","onChange","isValid","validityClassName","generateOptions","map","option","value","text","defaultProps","propTypes","string","arrayOf","shape","func","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAAA,MAE7BC,SAF6B,GAQ3BD,KAR2B,CAE7BC,SAF6B;AAAA,MAG7BC,WAH6B,GAQ3BF,KAR2B,CAG7BE,WAH6B;AAAA,MAI7BC,UAJ6B,GAQ3BH,KAR2B,CAI7BG,UAJ6B;AAAA,MAK7BC,OAL6B,GAQ3BJ,KAR2B,CAK7BI,OAL6B;AAAA,MAM7BC,QAN6B,GAQ3BL,KAR2B,CAM7BK,QAN6B;AAAA,MAO7BC,OAP6B,GAQ3BN,KAR2B,CAO7BM,OAP6B;AAU/B,MAAMC,iBAAiB,qDACrBD,OAAO,GAAG,EAAH,GAAQ,+BADM,CAAvB;AAIA,SACE;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,SADH,EAEE;AACE,IAAA,YAAY,EAAEC,WADhB;AAEE,IAAA,SAAS,EAAEK,iBAFb;AAGE,IAAA,IAAI,EAAEJ,UAHR;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGG,eAAe,CAACJ,OAAD,CANlB,CAFF,CADF;AAaD,CA3BD;;AA6BA,SAASI,eAAT,CAAyBJ,OAAzB,EAAkC;AAChC,SAAOA,OAAO,CAACK,GAAR,CAAY,UAAAC,MAAM;AAAA,WACvB;AAAQ,MAAA,KAAK,EAAEA,MAAM,CAACC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BD,MAAM,CAACE,IAArC,CADuB;AAAA,GAAlB,CAAP;AAGD;;AAEDb,eAAe,CAACc,YAAhB,GAA+B;AAC7BZ,EAAAA,SAAS,EAAE,EADkB;AAE7BC,EAAAA,WAAW,EAAE,EAFgB;AAG7BC,EAAAA,UAAU,EAAE,EAHiB;AAI7BC,EAAAA,OAAO,EAAE,EAJoB;AAK7BC,EAAAA,QAAQ,EAAEP,IALmB;AAM7BQ,EAAAA,OAAO,EAAE;AANoB,CAA/B;AASAP,eAAe,CAACe,SAAhB,GAA4B;AAC1Bb,EAAAA,SAAS,EAAEJ,SAAS,CAACkB,MADK;AAE1Bb,EAAAA,WAAW,EAAEL,SAAS,CAACkB,MAFG;AAG1BZ,EAAAA,UAAU,EAAEN,SAAS,CAACkB,MAHI;AAI1BX,EAAAA,OAAO,EAAEP,SAAS,CAACmB,OAAV,CACPnB,SAAS,CAACoB,KAAV,CAAgB;AACdN,IAAAA,KAAK,EAAEd,SAAS,CAACkB,MADH;AAEdH,IAAAA,IAAI,EAAEf,SAAS,CAACkB;AAFF,GAAhB,CADO,CAJiB;AAU1BV,EAAAA,QAAQ,EAAER,SAAS,CAACqB,IAVM;AAW1BZ,EAAAA,OAAO,EAAET,SAAS,CAACsB;AAXO,CAA5B;AAcA,eAAepB,eAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport noop from \"../utils/noop\";\n\nconst LabelOptionItem = props => {\n  const {\n    labelText,\n    selectValue,\n    selectName,\n    options,\n    onChange,\n    isValid\n  } = props;\n\n  const validityClassName = `profile-form__field profile-form__select${\n    isValid ? \"\" : \" profile-form__field--invalid\"\n  }`;\n\n  return (\n    <label className=\"profile-form__row\">\n      {labelText}\n      <select\n        defaultValue={selectValue}\n        className={validityClassName}\n        name={selectName}\n        onChange={onChange}\n      >\n        {generateOptions(options)}\n      </select>\n    </label>\n  );\n};\n\nfunction generateOptions(options) {\n  return options.map(option => (\n    <option value={option.value}>{option.text}</option>\n  ));\n}\n\nLabelOptionItem.defaultProps = {\n  labelText: \"\",\n  selectValue: \"\",\n  selectName: \"\",\n  options: [],\n  onChange: noop,\n  isValid: true\n};\n\nLabelOptionItem.propTypes = {\n  labelText: PropTypes.string,\n  selectValue: PropTypes.string,\n  selectName: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      text: PropTypes.string\n    })\n  ),\n  onChange: PropTypes.func,\n  isValid: PropTypes.bool\n};\n\nexport default LabelOptionItem;\n"]},"metadata":{},"sourceType":"module"}